--[[
    Created by Slothpala 
--]]
local Media     = LibStub("LibSharedMedia-3.0")
local statusbars =  LibStub("LibSharedMedia-3.0"):List("statusbar")

local lastEntry = 6
local selectedWidth, colorWidth, statusBarWidth = 1, 0.4, 1.8
local options = {
    name = "HealthBarColor",
    handler = HealthBarColor,
    type = "group",
    args = {
        Version = {
            order = 0,
            name = "            v10.1.5-2.5.0",
            type = "group",
            disabled = true,
            args = {},
        },
        HealthBars = {
            order = 1,
            name = "Health Bars",
            type = "group",
            args = {
                Player = {
                    order = 1,
                    name = "Player",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.Player.selected == 2 then return false end return true end,
                            width = colorWidth,
                        },  
                    },
                },
                Target = {
                    order = 2,
                    name = "Target",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"targets class color","my class color","static color","reaction color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = function() if HealthBarColor.db.profile.HealthBars.Target.selected == 3 then return "color" end return "NPC color" end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if ( HealthBarColor.db.profile.HealthBars.Target.selected == 2 or HealthBarColor.db.profile.HealthBars.Target.selected == 4 ) or ( HealthBarColor.db.profile.HealthBars.Target.selected == 1 and HealthBarColor.db.profile.HealthBars.Target.reaction ) then return true end return false end,
                            width = colorWidth,
                        },  
                        reaction = {
                            order = 3,
                            name = "NPC color by reaction",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.Target.selected == 1 then return false end return true end,
                        },
                    },
                },
                ToT = {
                    order = 3,
                    name = "Target of Target",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"tot class color","my class color","static color","reaction color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = function() if HealthBarColor.db.profile.HealthBars.ToT.selected == 3 then return "color" end return "NPC color" end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if ( HealthBarColor.db.profile.HealthBars.ToT.selected == 2 or HealthBarColor.db.profile.HealthBars.ToT.selected == 4 ) or ( HealthBarColor.db.profile.HealthBars.ToT.selected == 1 and HealthBarColor.db.profile.HealthBars.ToT.reaction ) then return true end return false end,
                            width = colorWidth,
                        },  
                        reaction = {
                            order = 3,
                            name = "NPC color by reaction",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.ToT.selected == 1 then return false end return true end,
                        },
                    },
                },
                Focus = {
                    order = 4,
                    name = "Focus",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"focus class color","my class color","static color","reaction color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = function() if HealthBarColor.db.profile.HealthBars.Focus.selected == 3 then return "color" end return "NPC color" end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if ( HealthBarColor.db.profile.HealthBars.Focus.selected == 2 or HealthBarColor.db.profile.HealthBars.Focus.selected == 4 ) or ( HealthBarColor.db.profile.HealthBars.Focus.selected == 1 and HealthBarColor.db.profile.HealthBars.Focus.reaction ) then return true end return false end,
                            width = colorWidth,
                        },  
                        reaction = {
                            order = 3,
                            name = "NPC color by reaction",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.Focus.selected == 1 then return false end return true end,
                        },
                    },
                },
                ToF = {
                    order = 5,
                    name = "Target of Focus",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"tof class color","my class color","static color","reaction color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = function() if HealthBarColor.db.profile.HealthBars.ToF.selected == 3 then return "color" end return "NPC color" end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if ( HealthBarColor.db.profile.HealthBars.ToF.selected == 2 or HealthBarColor.db.profile.HealthBars.ToF.selected == 4 ) or ( HealthBarColor.db.profile.HealthBars.ToF.selected == 1 and HealthBarColor.db.profile.HealthBars.ToF.reaction ) then return true end return false end,
                            width = colorWidth,
                        },  
                        reaction = {
                            order = 3,
                            name = "NPC color by reaction",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.ToF.selected == 1 then return false end return true end,
                        },
                    },
                },
                Pet = {
                    order = 6,
                    name = "Pet",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.Pet.selected == 2 then return false end return true end,
                            width = colorWidth,
                        },  
                    },
                },
                Boss = {
                    order = 7,
                    name = "Boss",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.HealthBars.Boss.selected == 2 then return false end return true end,
                            width = colorWidth,
                        },  
                    },
                },
            },
        },
        Fonts = {
            order = 1.1,
            name = "Fonts",
            type = "group",
            hidden = function() return not HealthBarColor.db.profile.Settings.Modules.Fonts end,
            args = {
                General = {
                    order = 0,
                    name = "Font Settings",
                    type = "group",
                    inline = true,
                    args = {
                        name = {
                            order = 1,
                            type = "select",
                            dialogControl = "LSM30_Font", 
                            name = "Name",
                            values = Media:HashTable("font"), 
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        healthbar = {
                            order = 2,
                            type = "select",
                            dialogControl = "LSM30_Font", 
                            name = "Health Bar",
                            values = Media:HashTable("font"), 
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        powerbar = {
                            order = 3,
                            type = "select",
                            dialogControl = "LSM30_Font", 
                            name = "Power Bar",
                            values = Media:HashTable("font"), 
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        newline = {
                            order = 4,
                            type = "description",
                            name = "",
                        },
                        name_outline = {
                            order = 5,
                            name = "Outline",
                            type = "select",
                            values = {"OUTLINE", "THICKOUTLINE", "MONOCHROME", "NONE"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        healthbar_outline = {
                            order = 6,
                            name = "Outline",
                            type = "select",
                            values = {"OUTLINE", "THICKOUTLINE", "MONOCHROME", "NONE"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        powerbar_outline = {
                            order = 7,
                            name = "Outline",
                            type = "select",
                            values = {"OUTLINE", "THICKOUTLINE", "MONOCHROME", "NONE"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                    },
                },
                Player = {
                    order = 1,
                    name = "Player",
                    type = "group",
                    inline = true,
                    args = {
                        name_choice = {
                            order = 1,
                            name = "Name",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        name_color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Player.name_choice == 2 then return false end return true end,
                            width = colorWidth,
                        },
                        healthbar_choice = {
                            order = 3,
                            name = "Health Bar",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        healthbar_color = {
                            order = 4,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Player.healthbar_choice == 2 then return false end return true end,
                            width = colorWidth,
                        },   
                        powerbar_choice = {
                            order = 5,
                            name = "Power Bar",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        powerbar_color = {
                            order = 6,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Player.powerbar_choice == 2 then return false end return true end,
                            width = colorWidth,
                        }, 
                    },
                },
                Target = {
                    order = 2,
                    name = "Target",
                    type = "group",
                    inline = true,
                    args = {
                        name_choice = {
                            order = 1,
                            name = "Name",
                            desc = "",
                            type = "select",
                            values = {"targets class color","targets class/reaction color","my class color","static color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.1,
                        },  
                        name_color = {
                            order = 2,
                            name = function() local text = HealthBarColor.db.profile.Fonts.Target.name_choice == 1 and "NPC color" or "color" return text end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Target.name_choice == 1 or HealthBarColor.db.profile.Fonts.Target.name_choice == 4 then return false end return true end,
                            width = 0.35,
                        },
                        healthbar_choice = {
                            order = 3,
                            name = "Health Bar",
                            desc = "",
                            type = "select",
                            values = {"targets class color","targets class/reaction color","my class color","static color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.1,
                        },  
                        healthbar_color = {
                            order = 4,
                            name = function() local text = HealthBarColor.db.profile.Fonts.Target.healthbar_choice == 1 and "NPC color" or "color" return text end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Target.healthbar_choice == 1 or HealthBarColor.db.profile.Fonts.Target.healthbar_choice == 4 then return false end return true end,
                            width = 0.35,
                        },   
                        powerbar_choice = {
                            order = 5,
                            name = "Power Bar",
                            desc = "",
                            type = "select",
                            values = {"targets class color","targets class/reaction color","my class color","static color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.1,
                        },  
                        powerbar_color = {
                            order = 6,
                            name = function() local text = HealthBarColor.db.profile.Fonts.Target.powerbar_choice == 1 and "NPC color" or "color" return text end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Target.powerbar_choice == 1 or HealthBarColor.db.profile.Fonts.Target.powerbar_choice == 4 then return false end return true end,
                            width = 0.35,
                        }, 
                    },
                },
                Focus = {
                    order = 4,
                    name = "Focus",
                    type = "group",
                    inline = true,
                    args = {
                        name_choice = {
                            order = 1,
                            name = "Name",
                            desc = "",
                            type = "select",
                            values = {"focus class color","focus class/reaction color","my class color","static color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.1,
                        },  
                        name_color = {
                            order = 2,
                            name = function() local text = HealthBarColor.db.profile.Fonts.Focus.name_choice == 1 and "NPC color" or "color" return text end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Focus.name_choice == 1 or HealthBarColor.db.profile.Fonts.Focus.name_choice == 4 then return false end return true end,
                            width = 0.35,
                        },
                        healthbar_choice = {
                            order = 3,
                            name = "Health Bar",
                            desc = "",
                            type = "select",
                            values = {"focus class color","focus class/reaction color","my class color","static color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.1,
                        },  
                        healthbar_color = {
                            order = 4,
                            name = function() local text = HealthBarColor.db.profile.Fonts.Focus.healthbar_choice == 1 and "NPC color" or "color" return text end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Focus.healthbar_choice == 1 or HealthBarColor.db.profile.Fonts.Focus.healthbar_choice == 4 then return false end return true end,
                            width = 0.35,
                        },   
                        powerbar_choice = {
                            order = 5,
                            name = "Power Bar",
                            desc = "",
                            type = "select",
                            values = {"focus class color","focus class/reaction color","my class color","static color"},
                            sorting = {1,2,3,4},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.1,
                        },  
                        powerbar_color = {
                            order = 6,
                            name = function() local text = HealthBarColor.db.profile.Fonts.Focus.powerbar_choice == 1 and "NPC color" or "color" return text end,
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Focus.powerbar_choice == 1 or HealthBarColor.db.profile.Fonts.Focus.powerbar_choice == 4 then return false end return true end,
                            width = 0.35,
                        }, 
                    },
                },
                Pet = {
                    order = 6,
                    name = "Pet",
                    type = "group",
                    inline = true,
                    args = {
                        name_choice = {
                            order = 1,
                            name = "Name",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        name_color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Pet.name_choice == 2 then return false end return true end,
                            width = colorWidth,
                        },
                        healthbar_choice = {
                            order = 3,
                            name = "Health Bar",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        healthbar_color = {
                            order = 4,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Pet.healthbar_choice == 2 then return false end return true end,
                            width = colorWidth,
                        },   
                        powerbar_choice = {
                            order = 5,
                            name = "Power Bar",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        powerbar_color = {
                            order = 6,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Pet.powerbar_choice == 2 then return false end return true end,
                            width = colorWidth,
                        }, 
                    },
                },
                Boss = {
                    order = 7,
                    name = "Boss",
                    type = "group",
                    inline = true,
                    args = {
                        selected = {
                            order = 1,
                            name = "color by..",
                            desc = "",
                            type = "select",
                            values = {"my class color","static color"},
                            sorting = {1,2},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            hidden = function() if HealthBarColor.db.profile.Fonts.Boss.selected == 2 then return false end return true end,
                            width = colorWidth,
                        },  
                    },
                },
            },
        },
        Settings = {
            order = 2,
            name = "Enabled Modules",
            type = "group",
            args = {
                Modules = {
                    order = 1,
                    name = "Modules",
                    type = "group",
                    inline = true,
                    args = {
                        Fonts = {
                            order = 1,
                            name = "Fonts",
                            desc = "change the font colors of health bars",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.4,
                        },
                        Textures = {
                            order = 2,
                            name = "Texture",
                            desc = "select custom health bar textures",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.5,
                        },
                        BackgroundTextures = {
                            order = 3,
                            name = "Background Texture",
                            desc = "create background textures beneath health bars",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.9,
                        },
                        DebuffColor = {
                            order = 4,
                            name = "DebuffColor",
                            desc = "color the player health bar by debuff type if you can dispel yourself",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.65,
                        },
                        PartyColor = {
                            order = 5,
                            name = "PartyColor",
                            desc = "enables class colors for the defaulft non raid style party frames.",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.65,
                        },
                        Glow = {
                            order = 6,
                            name = "Glow",
                            desc = "change or hide the the glowing colors of the player, target & focus frame.",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.36,
                        },
                        HideClassPowerBar = {
                            order = 7,
                            name = "HideClassPowerBar",
                            desc = "Hide the class power bar.",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.9,
                        },
                        BiggerHealthBar = {
                            order = 8,
                            name = "BiggerHealthBar",
                            desc = "Resizes the player's health bar to cover the entire inner player frame.",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.8,
                        },
                        Overabsorb = {
                            order = 8,
                            name = "Overabsorb",
                            desc = "Show absorb values above max health for player target and focus frame.",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.9,
                        },
                    },
                },
                ClassColorOverwrites = {
                    order = 2,
                    name = "Overwrite Class Colors",
                    type = "group",
                    inline = true,
                    args = {
                        enabled = {
                            order = 1,
                            name = "Custom Class Colors",
                            desc = "don't like a class color? change it!",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        newline = {
                            order = 1.1,
                            type = "description",
                            name = "",
                        },
                        deathknight = {
                            order = 2,
                            name = "Death Knight",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        demonhunter = {
                            order = 3,
                            name = "Demon Hunter",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        druid = {
                            order = 4,
                            name = "Druid",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        evoker = {
                            order = 5,
                            name = "Evoker",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        hunter = {
                            order = 6,
                            name = "Hunter",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        mage = {
                            order = 7,
                            name = "Mage",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        monk = {
                            order = 8,
                            name = "Monk",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        paladin = {
                            order = 9,
                            name = "Paladin",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        priest = {
                            order = 10,
                            name = "Priest",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        rogue = {
                            order = 11,
                            name = "Rogue",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        shaman = {
                            order = 12,
                            name = "Shaman",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        warlock = {
                            order = 13,
                            name = "Warlock",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        warrior = {
                            order = 14,
                            name = "Warrior",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                        newline2 = {
                            order = 15,
                            type = "description",
                            name = "",
                        },
                        ResetColors = {
                            order = 16,
                            name = "reset",
                            desc = "to default",
                            type = "execute",
                            width = 0.4,
                            func = 
                            function() 
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.deathknight   = {r=0.77,g=0.12,b=0.23}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.demonhunter   = {r=0.64,g=0.19,b=0.79}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.druid         = {r=1.00,g=0.49,b=0.04}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.evoker        = {r=0.20,g=0.58,b=0.50}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.hunter        = {r=0.67,g=0.83,b=0.45}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.mage          = {r=0.25,g=0.78,b=0.923}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.monk          = {r=0.00,g=1.00,b=0.60}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.paladin       = {r=0.96,g=0.55,b=0.73}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.priest        = {r=1.00,g=1.00,b=1.00}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.rogue         = {r=1.00,g=0.96,b=0.41}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.shaman        = {r=0.00,g=0.44,b=0.87}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.warlock       = {r=0.53,g=0.53,b=0.9}
                                HealthBarColor.db.profile.Settings.ClassColorOverwrites.warrior       = {r=0.78,g=0.61,b=0.43}
                                HealthBarColor:ReloadConfig()
                            end,
                            disabled = function() return not HealthBarColor.db.profile.Settings.ClassColorOverwrites.enabled end,
                        },
                    },
                },
                ReactionColorOverwrites = {
                    order = 3,
                    name = "Overwrite Reaction Colors",
                    type = "group",
                    inline = true,
                    args = {
                        enabled = {
                            order = 1,
                            name = "Custom Reaction Colors",
                            desc = "",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 1.2,
                        },
                        newline = {
                            order = 1.1,
                            type = "description",
                            name = "",
                        },
                        hostile = {
                            order = 2,
                            name = "Hostile",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ReactionColorOverwrites.enabled end,
                            width = 0.6,
                        },
                        neutral = {
                            order = 3,
                            name = "Neutral",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ReactionColorOverwrites.enabled end,
                            width = 0.6,
                        },
                        friendly = {
                            order = 4,
                            name = "Friendly",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            disabled = function() return not HealthBarColor.db.profile.Settings.ReactionColorOverwrites.enabled end,
                            width = 0.6,
                        },
                        newline2 = {
                            order = 5,
                            type = "description",
                            name = "",
                        },
                        ResetColors = {
                            order = 6,
                            name = "reset",
                            desc = "to default",
                            type = "execute",
                            width = 0.4,
                            func = 
                            function() 
                                HealthBarColor.db.profile.Settings.ReactionColorOverwrites.hostile  = {r=1,g=0,b=0}
                                HealthBarColor.db.profile.Settings.ReactionColorOverwrites.neutral  = {r=1,g=1,b=0}
                                HealthBarColor.db.profile.Settings.ReactionColorOverwrites.friendly = {r=0,g=1,b=0}
                                HealthBarColor:ReloadConfig()
                            end,
                            disabled = function() return not HealthBarColor.db.profile.Settings.ReactionColorOverwrites.enabled end,
                        },
                    },
                }
            },
        },
        Modules = {
            order = 3,
            name = "Module Settings",
            type = "group",
            hidden  = function() return not (HealthBarColor.db.profile.Settings.Modules.Textures or HealthBarColor.db.profile.Settings.Modules.BackgroundTextures or HealthBarColor.db.profile.Settings.Modules.DebuffColor or HealthBarColor.db.profile.Settings.Modules.Glow) end,
            args = {
                Textures = {
                    order = 1,
                    name = "Textures",
                    type = "group",
                    inline = true,
                    hidden  = function() return not HealthBarColor.db.profile.Settings.Modules.Textures end,
                    args = {
                        healthbar = {
                            order = 1,
                            type = "select",
                            name = "Health Bar",
                            values = statusbars,
                            get = function()
                                for i, v in next, statusbars do
                                    if v == HealthBarColor.db.profile.Modules.Textures.healthbar then return i end
                                end
                            end,
                            set = function(_, value)
                                HealthBarColor.db.profile.Modules.Textures.healthbar  = statusbars[value]
                                HealthBarColor:ReloadConfig()
                            end,
                          itemControl = "DDI-Statusbar",
                          width = statusBarWidth,
                        },
                        powerbar = {
                            order = 2,
                            type = "select",
                            name = "Power Bar",
                            values = statusbars,
                            get = function()
                                for i, v in next, statusbars do
                                    if v == HealthBarColor.db.profile.Modules.Textures.powerbar then return i end
                                end
                            end,
                            set = function(_, value)
                                HealthBarColor.db.profile.Modules.Textures.powerbar  = statusbars[value]
                                HealthBarColor:ReloadConfig()
                            end,
                          itemControl = "DDI-Statusbar",
                          width = statusBarWidth,
                          disabled  = function() return HealthBarColor.db.profile.Modules.Textures.excludep end,
                        },
                        excludep = {
                            order = 3,
                            name = "Exclude",
                            desc = "exclude the power bar texture",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                            width = 0.5,
                        },
                    },
                },
                BackgroundTextures = {
                    order = 2,
                    name = "Background Textures",
                    type = "group",
                    inline = true,
                    hidden  = function() return not HealthBarColor.db.profile.Settings.Modules.BackgroundTextures end,
                    args = {
                        texture = {
                            order = 1,
                            type = "select",
                            name = "Texture",
                            values = statusbars,
                            get = function()
                                for i, v in next, statusbars do
                                    if v == HealthBarColor.db.profile.Modules.BackgroundTextures.texture then return i end
                                end
                            end,
                            set = function(_, value)
                                HealthBarColor.db.profile.Modules.BackgroundTextures.texture  = statusbars[value]
                                HealthBarColor:ReloadConfig()
                            end,
                          itemControl = "DDI-Statusbar",
                          width = statusBarWidth,
                        },
                        color = {
                            order = 2,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = colorWidth,
                        },  
                    },
                },
                DebuffColor = {
                    order = 3,
                    name = "Dispellable Debuff Color",
                    type = "group",
                    inline = true,
                    hidden  = function() return not HealthBarColor.db.profile.Settings.Modules.DebuffColor end,
                    args = {
                        Curse = {
                            order = 1,
                            name = "Curse",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = 0.5,
                        },
                        Disease = {
                            order = 2,
                            name = "Disease",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = 0.5,
                        },
                        Magic = {
                            order = 3,
                            name = "Magic",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = 0.5,
                        },
                        Poison = {
                            order = 4,
                            name = "Poison",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = 0.5,
                        },
                        ignoreMagic = {
                            order = 5,
                            name = "Ignore Magic",
                            desc = "ignore magic debuffs",
                            type = "toggle",
                            get = "GetStatus",
                            set = "SetStatus",
                        },
                        newline2 = {
                            order = 6,
                            type = "description",
                            name = "",
                        },
                        ResetColors = {
                            order = 8,
                            name = "reset",
                            desc = "to default",
                            type = "execute",
                            width = 0.4,
                            func = 
                            function() 
                                HealthBarColor.db.profile.Modules.DebuffColor.Curse   = {r=0.6,g=0.0,b=1.0}
                                HealthBarColor.db.profile.Modules.DebuffColor.Disease = {r=0.6,g=0.4,b=0.0}
                                HealthBarColor.db.profile.Modules.DebuffColor.Magic   = {r=0.2,g=0.6,b=1.0}
                                HealthBarColor.db.profile.Modules.DebuffColor.Poison  = {r=0.0,g=0.6,b=0.0}
                                HealthBarColor:ReloadConfig()
                            end,
                        },
                    },
                },
                Glow = {
                    order = 4,
                    name = "Glow",
                    type = "group",
                    inline = true,
                    hidden  = function() return not HealthBarColor.db.profile.Settings.Modules.Glow end,
                    args = {
                        player = {
                            order = 1,
                            name = "Player",
                            desc = "",
                            type = "select",
                            values = {"class color","static color","hide"},
                            sorting = {1,2,3},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },  
                        player_static_color = {
                            order = 1.1,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = colorWidth,
                            hidden  = function() if HealthBarColor.db.profile.Modules.Glow.player == 2 then return false end return true end,
                        }, 
                        target = {
                            order = 2,
                            name = "Target",
                            desc = "",
                            type = "select",
                            values = {"class/reaction color","static color","hide"},
                            sorting = {1,2,3},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },
                        target_static_color = {
                            order = 2.1,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = colorWidth,
                            hidden  = function() if HealthBarColor.db.profile.Modules.Glow.target == 2 then return false end return true end,
                        }, 
                        focus = {
                            order = 3,
                            name = "Focus",
                            desc = "",
                            type = "select",
                            values = {"class/reaction color","static color","hide"},
                            sorting = {1,2,3},
                            get = "GetStatus",
                            set = "SetStatus",
                            width = selectedWidth,
                        },    
                        focus_static_color = {
                            order = 3.1,
                            name = "color",
                            desc = "",
                            type = "color",
                            get = "GetColor",
                            set = "SetColor",
                            width = colorWidth,
                            hidden  = function() if HealthBarColor.db.profile.Modules.Glow.focus == 2 then return false end return true end,
                        }, 
                    },
                },
            },
        },
        ImportExportPofile = {
            order = lastEntry,
            name = "Import/Export Profile",
            type = "group",
            args = {
                Header = {
                    order = 1,
                    name = "Share your profile or import one",
                    type = "header",
                },
                Desc = {
                    order = 2,
                    name = "To export your current profile copy the code below.\nTo import a profile replace the code below and press Accept",
                    fontSize = "medium",
                    type = "description",
                },
                Textfield = {
                    order = 3,
                    name = "import/export from or to your current profile",
                    desc = "Caution: Importing a profile will overwrite your current profile.",
                    type = "input",
                    multiline = 20,
                    width = "full",
                    confirm = function() return "Caution: Importing a profile will overwrite your current profile." end,
                    get = function() return HealthBarColor:ShareProfile() end,
                    set = function(self, input) HealthBarColor:ImportProfile(input); ReloadUI() end, 
                },
            },
        },
    },
}

function HealthBarColor:GetOptionsTable()
    return options
end